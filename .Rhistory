group_by(Habitat, Site,`Transect #` ,Genus) %>% summarise(Count = sum(Count)) %>%
# mutate(Perc = Count/100) %>% select(-Count) %>%
spread(Genus,Count) %>%
gather(Genus,Count, 4:17,na.rm = F) %>% mutate(Count = replace_na(Count, 0)) %>%
# filter(Genus %in% dat.fishgen) %>%
filter(!Genus %in% c("juv.", "Juv.", "Dark")) %>%
# mutate(Genus = recode(Genus, Dark = "Dark Parrot")) %>%
group_by(Habitat, Site, Genus) %>%
summarise(mn = mean(Count),
# no=n(Count>0),
se = sd(Count)/sqrt(n()))
dat.fishgen2$Family = ifelse(dat.fishgen2$Genus %in% c("Acanthurus", "Ctenochaetus", "Naso", "Zebrasoma"), "Acanthuridae",
ifelse(dat.fishgen2$Genus %in% c("Chlorurus", "Scarus"), "Labridae: Scarini",
ifelse(dat.fishgen2$Genus %in% c("Ecsenius stictus", "other Blenniidae"), "Blenniidae",
ifelse(dat.fishgen2$Genus %in% c("Pomacentrus spp", "other Pomacentridae"), "Pomacentridae", "Siganidae"))))
dat.fishgen2$Facet = factor(ifelse(dat.fishgen2$Genus == "Pomacentrus spp", "Pomacentrus spp", "Other Species"),
levels = c("Pomacentrus spp", "Other Species"))
genusorder = dat.fishgen2 %>% ungroup %>% select(Genus, Family) %>% distinct() %>% arrange(Family) %>% pull(Genus)
dat.fishgen2$Genus = factor(dat.fishgen2$Genus, levels = genusorder)
p=ggplot(dat.benthsum, aes(x=Site, y=Perc)) +geom_col(aes(fill=BenthosSum)) +facet_grid(~Habitat) +
scale_fill_viridis_d() +theme_bw()
pFish = ggplot(dat.fishgen2, aes(x=Site, y=mn, shape=Family)) +
geom_pointrange(aes(colour=Genus, shape=Family,  ymin=mn-se, ymax=mn+se), position = position_dodge(width=0.9)) +
facet_grid(Facet~Habitat, scales = "free_y") +
scale_colour_viridis_d() +
# scale_y_sqrt() +
# scale_y_continuous(trans = scales::log_trans(base = 10)) +
# scale_y_sqrt(breaks = c(1,10,25,50,100,200)) +
theme_bw() + ylab("Mean Abundance per Transect +/- SE")
pFish2 = ggplot(dat.fishgen2, aes(x=Site, y=mn)) +
geom_pointrange(aes(colour=Genus, ymin=mn-se, ymax=mn+se), position = position_dodge(width=0.5)) +
facet_grid(~Habitat) +
scale_colour_viridis_d() +
# scale_y_sqrt(breaks = c(1,10,50,100,200)) +
theme_bw() + ylab("Mean Abundance per 50m2 +/- SE")
g = egg::ggarrange(pBenth, pFish, ncol = 1, heights = c(1,1.4))
g = egg::ggarrange(pBenth, pFish, ncol = 1, heights = c(1,1.4))
ggsave("Figures/BenthosFish.png", plot = g, device = "png",
width = 7, height = 9, dpi=300)
g1 = egg::ggarrange(pBenth, pFish3, ncol = 1, heights = c(1,1.4))
ggsave("Figures/BenthosFish2.png", plot = g1, device = "png",
width = 7, height = 9, dpi=300)
pFish3
View(dat.fishgen2)
ggplot(dat.fishgen2, aes(x=Site, y=mn, shape=Family)) +
geom_pointrange(aes(colour=Genus, shape=Family,  ymin=mn-se, ymax=mn+se), position = position_dodge(width=0.9)) +
facet_grid(~Habitat, scales = "free_y") +
scale_colour_viridis_d() +
# scale_y_sqrt() +
scale_y_continuous(trans = scales::log_trans(base = 10)) +
# scale_y_sqrt(breaks = c(1,10,25,50,100,200)) +
theme_bw() + ylab(expression("Mean Abundance per 50"~m^{"2"}~"+/- SE"))
pFish3 = ggplot(dat.fishgen2, aes(x=Site, y=mn, shape=Family)) +
geom_pointrange(aes(colour=Genus, shape=Family,  ymin=mn-se, ymax=mn+se), position = position_dodge(width=0.9)) +
facet_grid(~Habitat, scales = "free_y") +
scale_colour_viridis_d() +
# scale_y_sqrt() +
scale_y_continuous(trans = scales::log_trans(base = 10)) +
# scale_y_sqrt(breaks = c(1,10,25,50,100,200)) +
theme_bw() + ylab(expression("Mean Abundance per 50"~m^{"2"}~"+/- SE"))
pFish3
g1 = egg::ggarrange(pBenth, pFish3, ncol = 1, heights = c(1,1.4))
ggsave("Figures/BenthosFish2.png", plot = g1, device = "png",
width = 7, height = 9, dpi=300)
m1priors = get_prior(formula =TotalBites ~ bite_on*habitat*site + (1|id/Date),
data=dat.bites.sum, family="negbinomial")
library(bmrs)
library(brms)
m1priors = get_prior(formula =TotalBites ~ bite_on*habitat*site + (1|id/Date),
data=dat.bites.sum, family="negbinomial")
m1priors
citation()
sessionInfo()
citation("emmeans")
citation("tidybayes")
citation(brms)
citation("brms")
g = egg::ggarrange(pES.1, pES.2,pPO.1, pPO.2,
pCS.1, pCS.2,ncol=2,nrow = 3, widths = c(1.4,1),heights = c(1.5, 1.5,1))
ggsave("Figures/GrazingSpecies.tiff", plot = g, device = "tiff",
width = 6, height = 8, dpi=300)
ggsave("Figures/GrazingSpecies.svg", plot = g, device = "svg",
width = 6, height = 8, dpi=300)
install.packages("gdtools")
install.packages("gdtools")
ggsave("Figures/GrazingSpecies.svg", plot = g, device = "svg",
width = 6, height = 8, dpi=300)
library(ggplot2)
ggsave("Figures/GrazingSpecies.svg", plot = g, device = "svg",
width = 6, height = 8, dpi=300)
ggsave("Figures/GrazingSpecies.pdf", plot = g, device = "pdf",
width = 6, height = 8, dpi=300)
librarY9export
library(export)
intstall.packages(export)
intstall.package(export)
install.packages(export)
install.packages("export")
ggsave("Figures/GrazingSpecies.eps", plot = g, device = "eps",
width = 6, height = 8, dpi=300)
svg("Figures/GrazingSpecies.svg")
print(g)     # Plot 1 --> in the first page of PDF     # Plot 2 ---> in the second page of the PDF
dev.off()
svg("Figures/GrazingSpecies.svg")
print(g)     # Plot 1 --> in the first page of PDF     # Plot 2 ---> in the second page of the PDF
dev.off()
g = egg::ggarrange(pES.1, pES.2,pPO.1, pPO.2,
pCS.1, pCS.2,ncol=2,nrow = 3, widths = c(1.4,1),heights = c(1.5, 1.5,1))
g
ggsave("Figures/GrazingSpecies.svg", plot = g, device = "svg",
width = 6, height = 8, dpi=300)
install.packages("egg")
g = egg::ggarrange(pES.1, pES.2,pPO.1, pPO.2,
pCS.1, pCS.2,ncol=2,nrow = 3, widths = c(1.4,1),heights = c(1.5, 1.5,1))
ggsave("Figures/GrazingSpecies.svg", plot = g, device = "svg",
width = 6, height = 8, dpi=300)
library(ggplot2)
ggsave("Figures/GrazingSpecies.svg", plot = g, device = "svg",
width = 6, height = 8, dpi=300)
ggsave("Figures/BenthosFish2.tiff", plot = g1, device = "tiff",
width = 7, height = 9, dpi=300)
ggsave("Figures/BenthosFish2.svg", plot = g1, device = "svg",
width = 7, height = 9, dpi=300)
g = egg::ggarrange(p3.1b, p4.1, ncol=2, widths = c(1.4,1))
ggsave("Figures/Grazing.tiff", plot = g, device = "tiff",
width = 6, height = 5, dpi=300)
ggsave("Figures/Grazing.svg", plot = g, device = "svg",
width = 6, height = 5, dpi=300)
p3.1b = ggplot(p3b, aes(y = .value, x = site, fill = bite_on)) +
theme_bw(base_size = 12) +
coord_cartesian(ylim= c(0,400)) +
geom_point(data=dat.bites.sum, aes(y=TotalBites, x=site, colour=bite_on),
position = position_jitterdodge(jitter.width = 0.1),pch=1) +
stat_eye(alpha=0.7, position = position_dodge(width = 0.7), .width = c(0.5, 0.95),point_interval=median_hdi) +
# stat_pointinterval(alpha=0.7, position = position_dodge(width = 0.7), .width = c(0.5, 0.95),
#                    point_interval=median_hdi) +
# stat_gradientinterval(position = "dodge") +
# scale_y_continuous(breaks = c(0.25, 0.5,0.75,1,1.25), limits = c(0.25,1.5)) +
scale_fill_manual(values=c("seagreen", "orange"),
labels = c("Algal turf with \nSargassum propagules", "Algal turf without \nSargassum propagules")) +
scale_colour_manual(values=c("seagreen", "orange"),
labels = c("Algal turf with \nSargassum propagules", "Algal turf without \nSargassum propagules")) +
# scale_fill_viridis_d() +
# scale_y_log10() +
# scale_colour_viridis_d() +
theme(legend.position = "bottom",axis.title.x = element_blank(), legend.margin=margin(-10, 0, 0, 0),
axis.title.y = element_text(),legend.title = element_blank()) +facet_grid(~habitat) +
ylab(expression(Number~of~bites~hr^{"-1"}~"\U00B1"~"95% credible intervals"))
library(ggdist)
p3.1b = ggplot(p3b, aes(y = .value, x = site, fill = bite_on)) +
theme_bw(base_size = 12) +
coord_cartesian(ylim= c(0,400)) +
geom_point(data=dat.bites.sum, aes(y=TotalBites, x=site, colour=bite_on),
position = position_jitterdodge(jitter.width = 0.1),pch=1) +
stat_eye(alpha=0.7, position = position_dodge(width = 0.7), .width = c(0.5, 0.95),point_interval=median_hdi) +
# stat_pointinterval(alpha=0.7, position = position_dodge(width = 0.7), .width = c(0.5, 0.95),
#                    point_interval=median_hdi) +
# stat_gradientinterval(position = "dodge") +
# scale_y_continuous(breaks = c(0.25, 0.5,0.75,1,1.25), limits = c(0.25,1.5)) +
scale_fill_manual(values=c("seagreen", "orange"),
labels = c("Algal turf with \nSargassum propagules", "Algal turf without \nSargassum propagules")) +
scale_colour_manual(values=c("seagreen", "orange"),
labels = c("Algal turf with \nSargassum propagules", "Algal turf without \nSargassum propagules")) +
# scale_fill_viridis_d() +
# scale_y_log10() +
# scale_colour_viridis_d() +
theme(legend.position = "bottom",axis.title.x = element_blank(), legend.margin=margin(-10, 0, 0, 0),
axis.title.y = element_text(),legend.title = element_blank()) +facet_grid(~habitat) +
ylab(expression(Number~of~bites~hr^{"-1"}~"\U00B1"~"95% credible intervals"))
g = egg::ggarrange(p3.1b, p4.1, ncol=2, widths = c(1.4,1))
ggsave("Figures/Grazing.svg", plot = g, device = "svg",
width = 6, height = 5, dpi=300)
p3.1b = ggplot(p3b, aes(y = .value, x = site, fill = bite_on)) +
theme_bw(base_size = 12) +
coord_cartesian(ylim= c(0,400)) +
geom_point(data=dat.bites.sum, aes(y=TotalBites, x=site, colour=bite_on),
position = position_jitterdodge(jitter.width = 0.1),pch=1) +
stat_eye(alpha=0.7, position = position_dodge(width = 0.7), .width = c(0.5, 0.95),point_interval=median_hdi) +
# stat_pointinterval(alpha=0.7, position = position_dodge(width = 0.7), .width = c(0.5, 0.95),
#                    point_interval=median_hdi) +
# stat_gradientinterval(position = "dodge") +
# scale_y_continuous(breaks = c(0.25, 0.5,0.75,1,1.25), limits = c(0.25,1.5)) +
scale_fill_manual(values=c("seagreen", "orange"),
labels = c("Algal turf with \nSargassum propagules", "Algal turf without \nSargassum propagules")) +
scale_colour_manual(values=c("seagreen", "orange"),
labels = c("Algal turf with \nSargassum propagules", "Algal turf without \nSargassum propagules")) +
# scale_fill_viridis_d() +
# scale_y_log10() +
# scale_colour_viridis_d() +
theme(legend.position = "bottom",axis.title.x = element_blank(), legend.margin=margin(-10, 0, 0, 0),
axis.title.y = element_text(font="sans"),legend.title = element_blank()) +facet_grid(~habitat) +
ylab(expression(Number~of~bites~hr^{"-1"}~"+/-"~"95% credible intervals"))
p3.1b = ggplot(p3b, aes(y = .value, x = site, fill = bite_on)) +
theme_bw(base_size = 12) +
coord_cartesian(ylim= c(0,400)) +
geom_point(data=dat.bites.sum, aes(y=TotalBites, x=site, colour=bite_on),
position = position_jitterdodge(jitter.width = 0.1),pch=1) +
stat_eye(alpha=0.7, position = position_dodge(width = 0.7), .width = c(0.5, 0.95),point_interval=median_hdi) +
# stat_pointinterval(alpha=0.7, position = position_dodge(width = 0.7), .width = c(0.5, 0.95),
#                    point_interval=median_hdi) +
# stat_gradientinterval(position = "dodge") +
# scale_y_continuous(breaks = c(0.25, 0.5,0.75,1,1.25), limits = c(0.25,1.5)) +
scale_fill_manual(values=c("seagreen", "orange"),
labels = c("Algal turf with \nSargassum propagules", "Algal turf without \nSargassum propagules")) +
scale_colour_manual(values=c("seagreen", "orange"),
labels = c("Algal turf with \nSargassum propagules", "Algal turf without \nSargassum propagules")) +
# scale_fill_viridis_d() +
# scale_y_log10() +
# scale_colour_viridis_d() +
theme(legend.position = "bottom",axis.title.x = element_blank(), legend.margin=margin(-10, 0, 0, 0),
axis.title.y = element_text(family="sans"),legend.title = element_blank()) +facet_grid(~habitat) +
ylab(expression(Number~of~bites~hr^{"-1"}~"+/-"~"95% credible intervals"))
g = egg::ggarrange(p3.1b, p4.1, ncol=2, widths = c(1.4,1))
ggsave("Figures/Grazing.svg", plot = g, device = "svg",
width = 6, height = 5, dpi=300)
pPO.1 = ggplot(pPOa, aes(y = (.value), x=habitat, fill = bite_on)) +
theme_bw(base_size = 12) +
stat_eye(alpha=0.7, position = position_dodge(width = 0.7), .width = c(0.5, 0.95)) +
coord_cartesian(ylim= c(0,2)) +
geom_point(data=dat.bites.spmodPO2, aes(y=(TotalBites/3), x=habitat, colour=bite_on),
position = position_jitterdodge(jitter.width = 0.1),pch=1) +
stat_pointinterval(alpha=0.7, position = position_dodge(width = 0.7), .width = c(0.66, 0.95)) +
# stat_gradientinterval(position = "dodge") +
# scale_y_continuous(breaks = c(0.25, 0.5,0.75,1,1.25), limits = c(0.25,1.5)) +
# scale_fill_viridis_d() +
scale_fill_manual(values=c("seagreen", "orange")) +
scale_colour_manual(values=c("seagreen", "orange")) +
# scale_y_log10() +
# scale_colour_viridis_d() +
theme(legend.position = "none",axis.title.x = element_blank(),
legend.margin=margin(-13, 0, 0, 0)) +
facet_wrap(~species, scales = "free_y", ncol = 1) +
ylab(expression(Number~of~bites~hr^{"-1"}~"+/-"~"95% credible intervals"))
g = egg::ggarrange(pES.1, pES.2,pPO.1, pPO.2,
pCS.1, pCS.2,ncol=2,nrow = 3, widths = c(1.4,1),heights = c(1.5, 1.5,1))
ggsave("Figures/GrazingSpecies.svg", plot = g, device = "svg",
width = 6, height = 8, dpi=300)
g=egg::ggarrange(p1, p2, ncol=2, widths = c(1.4,1))
ggsave("Figures/PropSurvival.tiff", plot = g, device = "tiff",
width = 8, height = 5, dpi=300)
ggsave("Figures/PropSurvival.svg", plot = g, device = "svg",
width = 8, height = 5, dpi=300)
# Fish abundance by Family ----
dat.fishfam = dat.fish %>% select(c(1:4,7:8)) %>% rbind(dat.fish2) #%>%
library(tidyverse)
# Fish abundance by Family ----
dat.fishfam = dat.fish %>% select(c(1:4,7:8)) %>% rbind(dat.fish2) #%>%
View(dat.fishfam)
# Fish abundance by Family ----
dat.fishfam = dat.fish %>% select(c(1:4,7:8)) %>% rbind(dat.fish2) %>%
filter(!Genus %in% c("juv.", "Juv.", "Dark")) %>%
mutate(Family = ifelse(Genus %in% c("Acanthurus", "Ctenochaetus", "Naso", "Zebrasoma"), "Acanthuridae",
ifelse(Genus %in% c("Chlorurus", "Scarus"), "Labridae: Scarini",
ifelse(Genus %in% c("Ecsenius stictus", "other Blenniidae"), "Blenniidae",
ifelse(Genus %in% c("Pomacentrus spp", "other Pomacentridae"), "Pomacentridae", "Siganidae")))))
View(dat.fishfam)
# Fish abundance by Family ----
dat.fishfam = dat.fish %>% select(c(1:4,7:8)) %>% rbind(dat.fish2) %>%
filter(!Genus %in% c("juv.", "Juv.", "Dark")) %>%
mutate(Family = ifelse(Genus %in% c("Acanthurus", "Ctenochaetus", "Naso", "Zebrasoma"), "Acanthuridae",
ifelse(Genus %in% c("Chlorurus", "Scarus"), "Labridae: Scarini",
ifelse(Genus %in% c("Ecsenius stictus", "other Blenniidae"), "Blenniidae",
ifelse(Genus %in% c("Pomacentrus spp", "other Pomacentridae"), "Pomacentridae", "Siganidae"))))) %>%
group_by(Habitat, Site,`Transect #` ,Family) %>% summarise(Count = sum(Count)) %>%
# mutate(Perc = Count/100) %>% select(-Count) %>%
spread(Family,Count) #%>%
View(dat.fishfam)
# Fish abundance by Family ----
dat.fishfam = dat.fish %>% select(c(1:4,7:8)) %>% rbind(dat.fish2) %>%
filter(!Genus %in% c("juv.", "Juv.", "Dark")) %>%
mutate(Family = ifelse(Genus %in% c("Acanthurus", "Ctenochaetus", "Naso", "Zebrasoma"), "Acanthuridae",
ifelse(Genus %in% c("Chlorurus", "Scarus"), "Labridae: Scarini",
ifelse(Genus %in% c("Ecsenius stictus", "other Blenniidae"), "Blenniidae",
ifelse(Genus %in% c("Pomacentrus spp", "other Pomacentridae"), "Pomacentridae", "Siganidae"))))) %>%
group_by(Habitat, Site,`Transect #` ,Family) %>% summarise(Count = sum(Count)) %>%
# mutate(Perc = Count/100) %>% select(-Count) %>%
spread(Family,Count) %>%
gather(Genus,Count, 4:8,na.rm = F) %>% mutate(Count = replace_na(Count, 0)) #%>%
View(dat.fish)
# Fish abundance by Family ----
dat.fishfam = dat.fish %>% select(c(1:4,7:8)) %>% rbind(dat.fish2) %>%
filter(!Genus %in% c("juv.", "Juv.", "Dark")) %>%
mutate(Family = ifelse(Genus %in% c("Acanthurus", "Ctenochaetus", "Naso", "Zebrasoma"), "Acanthuridae",
ifelse(Genus %in% c("Chlorurus", "Scarus"), "Labridae: Scarini",
ifelse(Genus %in% c("Ecsenius stictus", "other Blenniidae"), "Blenniidae",
ifelse(Genus %in% c("Pomacentrus spp", "other Pomacentridae"), "Pomacentridae", "Siganidae"))))) %>%
group_by(Habitat, Site,`Transect #` ,Family) %>% summarise(Count = sum(Count)) %>%
# mutate(Perc = Count/100) %>% select(-Count) %>%
spread(Family,Count) %>%
gather(Genus,Count, 4:8,na.rm = F) %>% mutate(Count = replace_na(Count, 0)) %>%
group_by(Habitat, Site, Family) %>%
summarise(mn = mean(Count),
# no=n(Count>0),
se = sd(Count)/sqrt(n()))
# Fish abundance by Family ----
dat.fishfam = dat.fish %>% select(c(1:4,7:8)) %>% rbind(dat.fish2) %>%
filter(!Genus %in% c("juv.", "Juv.", "Dark")) %>%
mutate(Family = ifelse(Genus %in% c("Acanthurus", "Ctenochaetus", "Naso", "Zebrasoma"), "Acanthuridae",
ifelse(Genus %in% c("Chlorurus", "Scarus"), "Labridae: Scarini",
ifelse(Genus %in% c("Ecsenius stictus", "other Blenniidae"), "Blenniidae",
ifelse(Genus %in% c("Pomacentrus spp", "other Pomacentridae"), "Pomacentridae", "Siganidae"))))) %>%
group_by(Habitat, Site,`Transect #` ,Family) %>% summarise(Count = sum(Count)) %>%
# mutate(Perc = Count/100) %>% select(-Count) %>%
spread(Family,Count) %>%
gather(Family,Count, 4:8,na.rm = F) %>% mutate(Count = replace_na(Count, 0)) %>%
group_by(Habitat, Site, Family) %>%
summarise(mn = mean(Count),
# no=n(Count>0),
se = sd(Count)/sqrt(n()))
genusorder = dat.fishfam %>% ungroup %>% select(Family) %>% distinct() %>% arrange(Family) %>% pull(Genus)
genusorder = dat.fishfam %>% ungroup %>% select(Family) %>% distinct() %>% arrange(Family) %>% pull(Family)
famorder = dat.fishfam %>% ungroup %>% select(Family) %>% distinct() %>% arrange(Family) %>% pull(Family)
dat.fishfam$Genus = factor(dat.fishfam$Family, levels = famorder)
dat.fishfam$Family = factor(dat.fishfam$Family, levels = famorder)
# plot
pFishFam = ggplot(dat.fishfam, aes(x=Site, y=mn, shape=Family)) +
geom_pointrange(aes(colour=Family, shape=Family,  ymin=mn-se, ymax=mn+se), position = position_dodge(width=0.9)) +
facet_grid(~Habitat, scales = "free_y") +
scale_colour_viridis_d() +
# scale_y_sqrt() +
scale_y_continuous(trans = scales::log_trans(base = 10)) +
# scale_y_sqrt(breaks = c(1,10,25,50,100,200)) +
theme_bw() + ylab(expression("Mean Abundance per 50"~m^{"2"}~"+/- SE"))
pFishFam
# plot
pFishFam = ggplot(dat.fishfam, aes(x=Site, y=mn, shape=Family)) +
geom_pointrange(aes(colour=Family, shape=Family,  ymin=mn-se, ymax=mn+se), position = position_dodge(width=0.9)) +
facet_grid(~Habitat, scales = "free_y") +
scale_colour_viridis_d() +
# scale_y_sqrt() +
# scale_y_continuous(trans = scales::log_trans(base = 10)) +
# scale_y_sqrt(breaks = c(1,10,25,50,100,200)) +
theme_bw() + ylab(expression("Mean Abundance per 50"~m^{"2"}~"+/- SE"))
pFishFam
pFishFamlog = ggplot(dat.fishfam, aes(x=Site, y=mn, shape=Family)) +
geom_pointrange(aes(colour=Family, shape=Family,  ymin=mn-se, ymax=mn+se), position = position_dodge(width=0.9)) +
facet_grid(~Habitat, scales = "free_y") +
scale_colour_viridis_d() +
# scale_y_sqrt() +
scale_y_continuous(trans = scales::log_trans(base = 10)) +
# scale_y_sqrt(breaks = c(1,10,25,50,100,200)) +
theme_bw() + ylab(expression("Mean Abundance per 50"~m^{"2"}~"+/- SE"))
# Write plots ----
g1 = egg::ggarrange(pBenth, pFishFam, ncol = 1, heights = c(1,1.4))
ggsave("Figures/BenthosFish2.png", plot = g1, device = "png",
width = 7, height = 9, dpi=300)
ggsave("Figures/BenthosFish2.tiff", plot = g1, device = "tiff",
width = 7, height = 9, dpi=300)
ggsave("Figures/BenthosFish2.svg", plot = g1, device = "svg",
width = 7, height = 9, dpi=300)
g1 = egg::ggarrange(pBenth, pFishFamlog, ncol = 1, heights = c(1,1.4))
pFishFamlog
ggsave("Figures/BenthosFishlog.png", plot = g1, device = "png",
width = 7, height = 9, dpi=300)
ggsave("Figures/BenthosFishlog.tiff", plot = g1, device = "tiff",
width = 7, height = 9, dpi=300)
ggsave("Figures/BenthosFishlog.svg", plot = g1, device = "svg",
width = 7, height = 9, dpi=300)
View(dat.prop)
pairs(emmeans::emmeans(mod.brms.bitesspSc.2,~ bite_on, type="response"), reverse = T)
pSC.1
pSC.2
pCSa = mod.brms.bitesspCS.2 %>% emmeans(~ bite_on, type="response") %>%
gather_emmeans_draws(type="response") %>%
mutate(.value = exp(.value), habitat="Crest")
library(tidyverse)
pSC.1
pCSa = mod.brms.bitesspCS.2 %>% emmeans(~ bite_on, type="response") %>%
gather_emmeans_draws(type="response") %>%
mutate(.value = exp(.value), habitat="Crest")
library(tidybayes)
pCSa = mod.brms.bitesspCS.2 %>% emmeans(~ bite_on, type="response") %>%
gather_emmeans_draws(type="response") %>%
mutate(.value = exp(.value), habitat="Crest")
library(emmeans)
pCS.1 = ggplot(pCSa, aes(y = (.value), x=habitat, fill = bite_on)) +
theme_bw(base_size = 12) +
stat_eye(alpha=0.7, position = position_dodge(width = 0.7), .width = c(0.5, 0.95)) +
coord_cartesian(ylim= c(0,10)) +
geom_point(data=dat.bites.spmodCS2, aes(y=(TotalBites), x=habitat, colour=bite_on),
position = position_jitterdodge(jitter.width = 0.1),pch=1) +
stat_pointinterval(alpha=0.7, position = position_dodge(width = 0.7), .width = c(0.66, 0.95)) +
# stat_gradientinterval(position = "dodge") +
# scale_y_continuous(breaks = c(0.25, 0.5,0.75,1,1.25), limits = c(0.25,1.5)) +
scale_fill_manual(values=c("seagreen", "orange"),
labels = c("Algal turf with \nSargassum propagules", "Algal turf without \nSargassum propagules")) +
scale_colour_manual(values=c("seagreen", "orange"),
labels = c("Algal turf with \nSargassum propagules", "Algal turf without \nSargassum propagules")) +
# scale_fill_manual(values=c("seagreen", "orange")) +
# scale_colour_manual(values=c("seagreen", "orange")) +
# scale_fill_viridis_d() +
# scale_y_log10() +
# scale_colour_viridis_d() +
theme(legend.position = "bottom",legend.title = element_blank(),
axis.title.x = element_blank(),axis.title.y = element_blank(),
legend.margin=margin(-13, 0, 0, 0)) +
facet_wrap(~species, scales = "free_y", ncol = 1)
pSC.1
library(plyr)
library(dplyr)
pCS.1 = ggplot(pCSa, aes(y = (.value), x=habitat, fill = bite_on)) +
theme_bw(base_size = 12) +
stat_eye(alpha=0.7, position = position_dodge(width = 0.7), .width = c(0.5, 0.95)) +
coord_cartesian(ylim= c(0,10)) +
geom_point(data=dat.bites.spmodCS2, aes(y=(TotalBites), x=habitat, colour=bite_on),
position = position_jitterdodge(jitter.width = 0.1),pch=1) +
stat_pointinterval(alpha=0.7, position = position_dodge(width = 0.7), .width = c(0.66, 0.95)) +
# stat_gradientinterval(position = "dodge") +
# scale_y_continuous(breaks = c(0.25, 0.5,0.75,1,1.25), limits = c(0.25,1.5)) +
scale_fill_manual(values=c("seagreen", "orange"),
labels = c("Algal turf with \nSargassum propagules", "Algal turf without \nSargassum propagules")) +
scale_colour_manual(values=c("seagreen", "orange"),
labels = c("Algal turf with \nSargassum propagules", "Algal turf without \nSargassum propagules")) +
# scale_fill_manual(values=c("seagreen", "orange")) +
# scale_colour_manual(values=c("seagreen", "orange")) +
# scale_fill_viridis_d() +
# scale_y_log10() +
# scale_colour_viridis_d() +
theme(legend.position = "bottom",legend.title = element_blank(),
axis.title.x = element_blank(),axis.title.y = element_blank(),
legend.margin=margin(-13, 0, 0, 0)) +
facet_wrap(~species, scales = "free_y", ncol = 1)
pSC.1
pCSa = mod.brms.bitesspCS.2 %>% emmeans(~ bite_on, type="response") %>%
gather_emmeans_draws(type="response") %>%
mutate(.value = exp(.value), habitat="Crest")
pCS.1 = ggplot(pCSa, aes(y = (.value), x=habitat, fill = bite_on)) +
theme_bw(base_size = 12) +
stat_eye(alpha=0.7, position = position_dodge(width = 0.7), .width = c(0.5, 0.95)) +
coord_cartesian(ylim= c(0,10)) +
geom_point(data=dat.bites.spmodCS2, aes(y=(TotalBites), x=habitat, colour=bite_on),
position = position_jitterdodge(jitter.width = 0.1),pch=1) +
stat_pointinterval(alpha=0.7, position = position_dodge(width = 0.7), .width = c(0.66, 0.95)) +
# stat_gradientinterval(position = "dodge") +
# scale_y_continuous(breaks = c(0.25, 0.5,0.75,1,1.25), limits = c(0.25,1.5)) +
scale_fill_manual(values=c("seagreen", "orange"),
labels = c("Algal turf with \nSargassum propagules", "Algal turf without \nSargassum propagules")) +
scale_colour_manual(values=c("seagreen", "orange"),
labels = c("Algal turf with \nSargassum propagules", "Algal turf without \nSargassum propagules")) +
# scale_fill_manual(values=c("seagreen", "orange")) +
# scale_colour_manual(values=c("seagreen", "orange")) +
# scale_fill_viridis_d() +
# scale_y_log10() +
# scale_colour_viridis_d() +
theme(legend.position = "bottom",legend.title = element_blank(),
axis.title.x = element_blank(),axis.title.y = element_blank(),
legend.margin=margin(-13, 0, 0, 0)) +
facet_wrap(~species, scales = "free_y", ncol = 1)
pSCa = mod.brms.bitesspSc.2 %>% emmeans(~ bite_on, type="response") %>%
gather_emmeans_draws(type="response") %>%
mutate(.value = exp(.value), habitat="Crest")
pSCb = pSCa %>% compare_levels(.value, by = bite_on) %>%
mutate(species = "Scarus", habitat="Crest")
pSC.1 = ggplot(pSCa, aes(y = (.value), x=habitat, fill = bite_on)) +
theme_bw(base_size = 12) +
stat_eye(alpha=0.7, position = position_dodge(width = 0.7), .width = c(0.5, 0.95)) +
coord_cartesian(ylim= c(0,1)) +
geom_point(data=dat.bites.spmodSC2, aes(y=(TotalBites/3), x=habitat, colour=bite_on),
position = position_jitterdodge(jitter.width = 0.1),pch=1) +
stat_pointinterval(alpha=0.7, position = position_dodge(width = 0.7), .width = c(0.66, 0.95)) +
# stat_gradientinterval(position = "dodge") +
# scale_y_continuous(breaks = c(0.25, 0.5,0.75,1,1.25), limits = c(0.25,1.5)) +
scale_fill_manual(values=c("seagreen", "orange")) +
scale_colour_manual(values=c("seagreen", "orange")) +
# scale_fill_viridis_d() +
# scale_y_log10() +
# scale_colour_viridis_d() +
theme(legend.position = "none",axis.title.x = element_blank(),axis.title.y = element_text(family="sans")) +
facet_wrap(~species, scales = "free_y", ncol = 1) +
ylab(expression(Number~of~bites~hr^{"-1"}~"\U00B1"~"95% quantile intervals"))
pSC.1
mod.brms.bitesspCS.3 = brm(formula =TotalBites ~ bite_on + (1|Site/Date),
data=dat.bites.spmodCS2, family="negbinomial", sample_prior = T,
prior = c(prior(normal(0, 5), class = "Intercept"),
prior(normal(0, 5), class = "b"),
prior(normal(0,5), class = "sd"),
prior(gamma(0.1, 0.1), class = "shape")),
warmup = 200, iter = 2000, chains = 3, cores = 3, thin=2,
control = list(adapt_delta = 0.98))
library(brms)
library(tidyverse)
library(tidyverse)
library(brms)
library(emmeans)
library(gridExtra)
library(tidybayes)
mod.brms.bitesspCS.3 = brm(formula =TotalBites ~ bite_on + (1|Site/Date),
data=dat.bites.spmodCS2, family="negbinomial", sample_prior = T,
prior = c(prior(normal(0, 5), class = "Intercept"),
prior(normal(0, 5), class = "b"),
prior(normal(0,5), class = "sd"),
prior(gamma(0.1, 0.1), class = "shape")),
warmup = 200, iter = 2000, chains = 3, cores = 3, thin=2,
control = list(adapt_delta = 0.98))
mod.brms.bitesspCS.3 = brm(formula =TotalBites ~ bite_on + (1|site/Date),
data=dat.bites.spmodCS2, family="negbinomial", sample_prior = T,
prior = c(prior(normal(0, 5), class = "Intercept"),
prior(normal(0, 5), class = "b"),
prior(normal(0,5), class = "sd"),
prior(gamma(0.1, 0.1), class = "shape")),
warmup = 200, iter = 2000, chains = 3, cores = 3, thin=2,
control = list(adapt_delta = 0.98))
dat.bites.mod = bind_rows(dat.bites.spmodAC2, dat.bites.spmodCS2, dat.bites.spmodSC2,
dat.bites.spmodES2, dat.bites.spmodPO2)
mod.brms.All1 = brm(formula =TotalBites ~ bite_on*species + (1|site/Date),
data=dat.bites.mod, family="negbinomial", sample_prior = T,
prior = c(prior(normal(0, 5), class = "Intercept"),
prior(normal(0, 5), class = "b"),
prior(normal(0,5), class = "sd"),
prior(gamma(0.1, 0.1), class = "shape")),
warmup = 200, iter = 2000, chains = 3, cores = 3, thin=2,
control = list(adapt_delta = 0.95))
